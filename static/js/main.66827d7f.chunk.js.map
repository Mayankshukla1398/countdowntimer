{"version":3,"sources":["Components/Input.js","Components/Submit.js","Components/Timer.js","App.js","reportWebVitals.js","index.js"],"names":["Input","display","value","className","style","justifyContent","type","placeholder","onChange","Submit","submit","onClick","background","Timer","days","hours","minutes","seconds","App","dateDisplay","event","setState","inputVal","target","onSubmit","state","countDown","Date","getTime","date","toDateString","mainCalc","now","count","timer","interval","setInterval","Math","floor","undefined","this","input","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAUeA,EARF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,QAAUC,EAAS,EAATA,MACrB,OACI,qBAAKC,UAAU,gBAAgBC,MAAO,CAACH,QAAQ,OAAQI,eAAe,UAAtE,SACA,uBAAOC,KAAK,OAAOC,YAAY,aAAaC,SAAUP,EAASC,MAAOA,OCK/DO,EARD,SAAC,GAAY,IAAXC,EAAU,EAAVA,OACZ,OACI,qBAAKP,UAAU,iBAAiBC,MAAO,CAACH,QAAQ,OAAQI,eAAe,UAAvE,SACA,wBAAQC,KAAK,SAASK,QAASD,EAAQN,MAAO,CAACQ,WAAY,sBAA3D,uBCIOC,EAPF,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,KAAKC,EAAyB,EAAzBA,MAAMC,EAAmB,EAAnBA,QAAQC,EAAW,EAAXA,QAC9B,OACI,qBAAKd,UAAU,uBAAf,SACD,6BAAI,iCAAOW,EAAP,WAAqBC,EAArB,YAAqCC,EAArC,cAAyDC,EAAzD,oBC8DIC,G,wDA1Db,aAAc,IAAD,8BACX,gBAaFC,YAAY,SAACC,GACX,EAAKC,SAAS,CAAEC,SAAWF,EAAMG,OAAOrB,SAf7B,EAkBbsB,SAAS,WACkB,KAAtB,EAAKC,MAAMH,WACZ,EAAKI,UAAY,IAAIC,KAAK,EAAKF,MAAMH,UAAUM,UAC/C,EAAKC,KAAO,IAAIF,KAAK,EAAKF,MAAMH,UAAUQ,eAC1C,EAAKT,SAAS,CAACC,SAAU,KACzB,EAAKS,aAvBI,EA0BZA,SAAS,WACR,IAAIC,GAAM,IAAIL,MAAOC,UACjBK,EAAQ,EAAKP,UAAYM,EAC7B,EAAKE,MAAMD,IA7BA,EAgCZC,MAAQ,SAACD,GACR,EAAKE,SAAWC,aAAY,WAC5BH,GAAS,IACT,IAAInB,EAAOuB,KAAKC,MAAML,EAAK,OACvBlB,EAAQsB,KAAKC,MAAOL,EAAK,MAAN,MACnBjB,EAAUqB,KAAKC,MAAOL,EAAK,KAAN,KACrBhB,EAAUoB,KAAKC,MAAOL,EAAK,IAAiB,KAChD,EAAKZ,SAAS,CAACP,KAAMA,EAAMC,MAAOA,EAAOC,QAASA,EAASC,QAASA,MACnE,MAtCD,EAAKS,UAAY,EACjB,EAAKS,cAAWI,EAChB,EAAKV,KAAO,GACZ,EAAKJ,MAAO,CACVH,SAAW,GACXR,KAAM,EACNC,MAAQ,EACRC,QAAQ,EACRC,QAAS,GAVA,E,0CA2Cb,WACE,OACE,qBAAKb,MAAQ,CAACH,QAAS,OAAQI,eAAgB,UAAWF,UAAW,MAArE,SACE,gCACA,qBAAIA,UAAU,gBAAd,2BAA6CqC,KAAKX,QAClD,cAAC,EAAD,CAAOf,KAAM0B,KAAKf,MAAMX,KAAMC,MAAOyB,KAAKf,MAAMV,MAAOC,QAASwB,KAAKf,MAAMT,QAASC,QAASuB,KAAKf,MAAMR,UACxG,cAAC,EAAD,CAAOhB,QAASuC,KAAKrB,YAAajB,MAAOsC,KAAKf,MAAMgB,QACpD,cAAC,EAAD,CAAQ/B,OAAQ8B,KAAKhB,oB,GAnDXkB,IAAMC,YCITC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.66827d7f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Input =({display , value})=>{\r\n    return(\r\n        <div className=\"f1 center pt4\" style={{display:'flex', justifyContent:'center'}}>\r\n        <input type=\"date\" placeholder=\"Enter Date\" onChange={display} value={value}  />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\n\r\nconst Submit =({submit})=>{\r\n    return(\r\n        <div className=\"f2 red pt4 dim\" style={{display:'flex', justifyContent:'center'}}>\r\n        <button type=\"submit\" onClick={submit} style={{background :'rgb(100, 170, 170)'}}>Submit</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Submit;","import React from 'react';\r\n\r\nconst Timer =({days,hours,minutes,seconds})=>{\r\n    return(\r\n        <div className=\"ba bw3 lightest-blue\">\r\n       <h1><span>{days} Days : {hours} Hours : {minutes} Minutes : {seconds} Seconds </span></h1> \r\n    </div>\r\n    )\r\n}\r\nexport default Timer;","import React from 'react';\nimport Input from './Components/Input';\nimport Submit from './Components/Submit';\nimport Timer from './Components/Timer';\nimport tachyons from 'tachyons';\n\n\n\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.countDown = 0;\n    this.interval = undefined;\n    this.date = \"\";\n    this.state ={\n      inputVal : '',\n      days :0,\n      hours : 0,\n      minutes:0,\n      seconds :0\n    }\n  }\n\n  dateDisplay=(event)=>{\n    this.setState({ inputVal : event.target.value})\n  }\n\n  onSubmit=()=>{\n    if(this.state.inputVal!==\"\") {\n      this.countDown = new Date(this.state.inputVal).getTime();\n      this.date = new Date(this.state.inputVal).toDateString();\n      this.setState({inputVal: \"\"});\n      this.mainCalc();\n    }\n  }\n   mainCalc=()=>{\n    let now = new Date().getTime();\n    let count = this.countDown - now ;\n    this.timer(count);\n   \n   }\n   timer = (count) => {\n    this.interval = setInterval(() => {\n    count -= 1000;\n    let days = Math.floor(count / (24*60*60*1000));\n    let hours = Math.floor((count % (24*60*60*1000)) / (60*60*1000));\n    let minutes = Math.floor((count % (60*60*1000)) / (60*1000));\n    let seconds = Math.floor((count % (60*1000)) / (1000));\n    this.setState({days: days, hours: hours, minutes: minutes, seconds: seconds},);\n  }, 1000);\n}\n\n  render(){\n    return(\n      <div style ={{display :'flex', justifyContent :'center'}} className =\"pt6\"  >\n        <div>\n        <h1 className=\"lightest-blue\">Timer Ends On {this.date}</h1>\n        <Timer days={this.state.days} hours={this.state.hours} minutes={this.state.minutes} seconds={this.state.seconds}/>\n        <Input display={this.dateDisplay} value={this.state.input}/>\n        <Submit submit={this.onSubmit}/>\n      </div>\n      </div>\n      \n      \n    )\n  }\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}